PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sn: <http://www.ldbc.eu/ldbc_socialnet/1.0/data/>
PREFIX snvoc: <http://www.ldbc.eu/ldbc_socialnet/1.0/vocabulary/>
PREFIX sntag: <http://www.ldbc.eu/ldbc_socialnet/1.0/tag/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?personId  ?likeCount ?messageCount ?replyCount ?score
WHERE {
  {
    SELECT ?personId (COUNT(distinct ?like) as ?likeCount) (COUNT(distinct ?message) as ?messageCount) (COUNT(distinct ?replyComment) as ?replyCount)
    WHERE {
      {  
        ?message rdf:type snvoc:Comment .
        ?message snvoc:hasTag ?tag .
        ?tag rdf:type ?tagClass .
        ?tagClass rdf:type snvoc:TagClass .
        ?tag foaf:name "Franz_Kafka" .
        ?like snvoc:hasComment ?message .
        ?personWhoLiked snvoc:likes ?like .
        ?personWhoLiked rdf:type snvoc:Person .
      } UNION {
        ?message rdf:type snvoc:Post .
        ?message snvoc:hasTag ?tag .
        ?tag rdf:type ?tagClass .
        ?tagClass rdf:type snvoc:TagClass .
        ?tag foaf:name "Franz_Kafka" .
        ?like snvoc:hasPost ?message .
        ?personWhoLiked snvoc:likes ?like .
        ?personWhoLiked rdf:type snvoc:Person .
      } .
      ?person rdf:type snvoc:Person .
      ?message snvoc:hasCreator ?person . 
      ?person snvoc:id ?personId .
      ?replyComment snvoc:replyOf ?message.
    }
    GROUP BY ?personId
  }
  BIND( ?messageCount + 2 * ?replyCount + 10 * ?likeCount as ?score)
}
ORDER BY DESC(?score) ?personId
