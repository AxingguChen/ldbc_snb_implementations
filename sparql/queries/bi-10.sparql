PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sn: <http://www.ldbc.eu/ldbc_socialnet/1.0/data/>
PREFIX snvoc: <http://www.ldbc.eu/ldbc_socialnet/1.0/vocabulary/>
PREFIX sntag: <http://www.ldbc.eu/ldbc_socialnet/1.0/tag/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person (SUM(?scoreInner) AS ?score) (SUM(?friendScore) AS ?friendsScore)
WHERE
{
    {
        SELECT ?friend ((COUNT(?message) + ?interestScore)  AS ?individualScore) 
        WHERE
        {
            BIND ("Chad" as ?tagName)
            VALUES (?type) {(snvoc:Comment) (snvoc:Post)}
            ?tag foaf:name ?tagName .
            ?friend a snvoc:Person .
            ?message a ?type .
            ?message snvoc:hasCreator ?friend .
            BIND( IF(EXISTS { ?friend snvoc:hasInterest ?tag}, 100, 0) AS ?interestScore)
            
        }
        GROUP BY ?friend ?interestScore
    }
    ?person a snvoc:Person
    BIND( IF(?person = ?friend, ?individualScore, 0) AS ?scoreInner )
    BIND( IF( EXISTS {?person snvoc:knows ?friend}, ?individualScore, 0 ) AS ?friendScore)
    FILTER (?friendScore > 0 || ?scoreInner > 0)

}
GROUP BY ?person 
ORDER BY DESC(?score + ?friendScore) ?person
LIMIT 100

